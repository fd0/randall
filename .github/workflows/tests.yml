name: Build and tests
on:
  # run tests on push to master, but not when other branches are pushed to
  push:
    branches:
      - master

  # run tests for pull requests to master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version:
          - 1.14.x
          - 1.15.x
    runs-on: ubuntu-latest

    env:
      GOPROXY: https://proxy.golang.org

    steps:

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code
        uses: actions/checkout@v1

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o randall_linux_${{ matrix.go-version }}_amd64
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o randall_windows_${{ matrix.go-version }}_amd64.exe
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o randall_darwin_${{ matrix.go-version }}_amd64

      - uses: actions/upload-artifact@v2
        with:
          name: randall_linux_amd64 (Go ${{ matrix.go-version }})
          path: randall_linux_amd64

      - uses: actions/upload-artifact@v2
        with:
          name: randall_windows_amd64 (Go ${{ matrix.go-version }})
          path: randall_windows_amd64

      - uses: actions/upload-artifact@v2
        with:
          name: randall_darwin_amd64 (Go ${{ matrix.go-version }})
          path: randall_darwin_amd64

      - name: Run tests
        run: |
          CGO_ENABLED=0 go test ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1

      - uses: docker://golangci/golangci-lint:latest
        with:
          args: golangci-lint run --disable unused,errcheck,ineffassign,staticcheck,gosimple
        env:
          CGO_ENABLED: 0
